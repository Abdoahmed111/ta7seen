import Navbar from "@/components/layouts/Navbar";
import { api } from "@/utils/api";
import { type NextPage } from "next";
import Head from "next/head";
import React, { useEffect, useState } from "react";

interface Task {
  id: number;
  name: string;
  from: string;
  to: string;
}

interface Day {
  name: string;
  id: string;
  tasks: Task[];
}

interface Week {
  days: Day[];
}

const Week: NextPage = () => {
  const [week, setWeek] = useState<Week | undefined>();
  const [currentDay, setCurrentDay] = useState<Day | undefined>();

  const weekData = api.week.getLatestWeek.useQuery();

  useEffect(() => {
    setWeek(weekData.data?.week);
    setCurrentDay(weekData.data?.day);
  }, [weekData]);

  return (
    <>
      <Head>
        <title>تحصين الٍران | بالحصون الخمسة</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main
        className="flex min-h-screen w-full flex-col items-end justify-start font-elmessiri"
        dir="rtl"
      >
        <Navbar />

        <div className="min-h-screen w-full bg-base-200">
          <div className="container mx-auto">
            <h2 className="mb-5 text-2xl">الورد اليومي</h2>
            <div className="bottom-2 my-8 rounded-lg border border-amber-50 p-5">
              {currentDay && (
                <div>
                  <p> {currentDay.name}</p>
                  {currentDay.tasks.map((task: Task) => (
                    <div key={task.id} className="flex gap-3">
                      <div>{task.name}</div>
                      <div>{task.from}</div>
                      <div>{task.to}</div>
                    </div>
                  ))}
                </div>
              )}
            </div>

            <h2 className="mb-5 text-2xl">جدول الاسبوع</h2>
            <div className="overflow-x-auto">
              <table className="table">
                {/* head */}
                <thead>
                  <tr>
                    <th>اليوم</th>
                    <th>القراءة </th>
                    <th>الاستماع</th>
                    <th>التحضير الاسبوعي</th>
                    <th>التحضير الليلي</th>
                    <th>التحضير القبلي</th>
                    <th>الجديد</th>
                    <th>التعاهد القريب</th>
                    <th>التعاهد البعيد</th>
                  </tr>
                </thead>
                <tbody>
                  {week &&
                    week.days.map((day: Day) => (
                      <tr key={day.id}>
                        <td>{day.name}</td>
                        <td>
                          {day.tasks[6]?.from} : {day.tasks[6]?.to}
                        </td>
                        <td>
                          {day.tasks[7]?.from} : {day.tasks[7]?.to}
                        </td>
                        <td>
                          {day.tasks[3]?.from} : {day.tasks[3]?.to}
                        </td>
                        <td>
                          {day.tasks[4]?.from === day.tasks[4]?.to
                            ? day.tasks[4]?.from
                            : day.tasks[4]
                            ? `${day.tasks[4]?.from} : ${day.tasks[4]?.to}`
                            : ""}
                        </td>
                        <td>
                          {day.tasks[5]?.from === day.tasks[5]?.to
                            ? day.tasks[5]?.from
                            : day.tasks[5]
                            ? `${day.tasks[5]?.from} : ${day.tasks[5]?.to}`
                            : ""}
                        </td>
                        <td>
                          {day.tasks[0]?.from === day.tasks[0]?.to
                            ? day.tasks[0]?.from
                            : day.tasks[0]?.from && day.tasks[0]?.to
                            ? `${day.tasks[0]?.from} : ${day.tasks[0]?.to}`
                            : ""}
                        </td>
                        <td>
                          {day.tasks[1]?.from} : {day.tasks[1]?.to}
                        </td>
                        <td>
                          {day.tasks[2]?.from} : {day.tasks[2]?.to}
                        </td>
                      </tr>
                    ))}
                </tbody>
              </table>
            </div>
          </div>
        </div>

        {/* Footer */}
        <footer className="footer mx-auto items-center justify-center bg-neutral p-4 text-neutral-content">
          <div className="items-center">
            <p>
              حقوق النشر محفوظة © 2022 تم تطويره بواسطة
              <a
                target="_blank"
                className="mx-1 text-warning"
                href="https://www.linkedin.com/in/abdelrahman114/"
              >
                عبدالرحمن أحمد عباس
              </a>
            </p>
          </div>
        </footer>
      </main>
    </>
  );
};

export default Week;
